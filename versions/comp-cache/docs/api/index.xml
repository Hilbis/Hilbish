<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>API on Hilbish</title><link>https://rosettea.github.io/Hilbish/versions/comp-cache/docs/api/</link><description>Recent content in API on Hilbish</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://rosettea.github.io/Hilbish/versions/comp-cache/docs/api/index.xml" rel="self" type="application/rss+xml"/><item><title>Module bait</title><link>https://rosettea.github.io/Hilbish/versions/comp-cache/docs/api/bait/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosettea.github.io/Hilbish/versions/comp-cache/docs/api/bait/</guid><description>Introduction Bait is the event emitter for Hilbish. Why name it bait? Why not. It throws hooks that you can catch. This is what you will use if you want to listen in on hooks to know when certain things have happened, like when you&amp;rsquo;ve changed directory, a command has failed, etc. To find all available hooks thrown by Hilbish, see doc hooks.
Functions catch(name, cb) Catches a hook with name.</description></item><item><title>Module commander</title><link>https://rosettea.github.io/Hilbish/versions/comp-cache/docs/api/commander/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosettea.github.io/Hilbish/versions/comp-cache/docs/api/commander/</guid><description>Introduction Commander is a library for writing custom commands in Lua. In order to make it easier to write commands for Hilbish, not require separate scripts and to be able to use in a config, the Commander library exists. This is like a very simple wrapper that works with Hilbish for writing commands. Example:
local commander = require &amp;#39;commander&amp;#39; commander.register(&amp;#39;hello&amp;#39;, function(args, sinks) sinks.out:writeln &amp;#39;Hello world!&amp;#39; end) In this example, a command with the name of hello is created that will print Hello world!</description></item><item><title>Module fs</title><link>https://rosettea.github.io/Hilbish/versions/comp-cache/docs/api/fs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosettea.github.io/Hilbish/versions/comp-cache/docs/api/fs/</guid><description>Introduction The fs module provides easy and simple access to filesystem functions and other things, and acts an addition to the Lua standard library&amp;rsquo;s I/O and filesystem functions.
Functions abs(path) -&amp;gt; string Gives an absolute version of path.
basename(path) -&amp;gt; string Gives the basename of path. For the rules, see Go&amp;rsquo;s filepath.Base
cd(dir) Changes directory to dir
dir(path) -&amp;gt; string Returns the directory part of path. For the rules, see Go&amp;rsquo;s filepath.</description></item><item><title>Module terminal</title><link>https://rosettea.github.io/Hilbish/versions/comp-cache/docs/api/terminal/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://rosettea.github.io/Hilbish/versions/comp-cache/docs/api/terminal/</guid><description>Introduction The terminal library is a simple and lower level library for certain terminal interactions.
Functions restoreState() Restores the last saved state of the terminal
saveState() Saves the current state of the terminal
setRaw() Puts the terminal in raw mode
size() Gets the dimensions of the terminal. Returns a table with width and height Note: this is not the size in relation to the dimensions of the display</description></item></channel></rss>